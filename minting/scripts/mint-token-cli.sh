#!/bin/bash

oref=$1 #input Utxo
amt=$2 # Token Amount
tn=$3 # Token Name
addrFile=$4 # Wallet address file
skeyFile=$5 
pid=$6
policyFile=../testnet/token.plutus # File policy was stored to 

# Sanity Check for debugging
echo "oref: $oref"
echo "amt: $amt"
echo "tn: $tn"
echo "address file: $addrFile"
echo "signing key file: $skeyFile"

ppFile=../testnet/protocol-parameters.json
# Get parameters from cli
cardano-cli query protocol-parameters $MAGIC --out-file $ppFile

unsignedFile=../testnet/tx.unsigned
signedFile=../testnet/tx.signed

# Get token name as hexedecimal
tnHex=$(cabal exec token-name -- $tn)
addr=$(cat $addrFile)

# Used for specifiying amount in transaction
v="$amt $pid.$tnHex"

echo "currency symbol: $pid"
echo "token name (hex): $tnHex"
echo "minted value: $v"
echo "address: $addr"

# Build transaction
cardano-cli transaction build \
    $MAGIC \
    --tx-in $oref \
    --tx-in-collateral $oref \
    --tx-out "$addr + 1500000 lovelace + $v" \
    --mint "$v" \
    --mint-script-file $policyFile \
    --mint-redeemer-file ../testnet/unit.json \
    --metadata-json-file metadata.json \
    --change-address $addr \
    --protocol-params-file $ppFile \
    --out-file $unsignedFile \

# Sign with our wallet  - this lets us check later if NFT's are infact generated by us
cardano-cli transaction sign \
    --tx-body-file $unsignedFile \
    --signing-key-file $skeyFile \
    $MAGIC \
    --out-file $signedFile

# Submit
cardano-cli transaction submit \
    $MAGIC \
    --tx-file $signedFile

