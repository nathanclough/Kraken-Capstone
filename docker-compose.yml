# docker-compose.yml
version: "3.8"

services:
  kraken-react-app:
    container_name: kraken-react-app
    build:
      context: ./kraken-app
      dockerfile: Dockerfile
    volumes:
      - './kraken-app:/app'
      - './kraken-app/node_modules:/app/node_modules'
      - 'cardano-node-ipc:/ipc'
      - 'cardano-node-data:/data'
    ports:
      - 3002:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
    stdin_open: true
    tty: true
  
  kraken-server:
    container_name: kraken-server
    environment:
      - CARDANO_NODE_SOCKET_PATH=/app/ipc/node.socket
    build:
      context: ./kraken-server
      dockerfile: Dockerfile
    volumes:
      - './kraken-server:/app'
      - './kraken-server/node_modules:/app/node_modules'
      - 'cardano-node-ipc:/ipc'
      - 'cardano-node-data:/data'
    ports:
      - 3003:3003
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start 

    stdin_open: true
    tty: true

  cardano-node:
    environment:
        - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    volumes:
        - 'cardano-node-ipc:/ipc'
        - 'cardano-node-data:/data'
    command: run --config  data/config/testnet-config.json \
                  --database-path data/db \
                  --topology data/config/testnet-topology.json \ 
                  --host-addr 0.0.0.0 \
                  --port 3001 \
                  --socket-path ipc/node.socket
    image: inputoutput/cardano-node
  
  kraken-db:
    volumes:
      - 'mongo-data:/data/db'
    ports:
      - 27017:27017
    image: mongo

volumes:
  cardano-node-ipc:
    external: true
    name: cardano-node-ipc
  cardano-node-data:
    external: true
    name: cardano-node-data
  mongo-data:
    external: true
    name: mongo-data
